// biome-ignore lint: this file is auto-generated by TanStack Router

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as LayoutImport } from './../../routes/_layout'
import { Route as LayoutIndexImport } from './../../routes/_layout/index'
import { Route as LayoutTextReplaceImport } from './../../routes/_layout/text/replace'
import { Route as LayoutTextRepeatImport } from './../../routes/_layout/text/repeat'
import { Route as LayoutTextCountImport } from './../../routes/_layout/text/count'
import { Route as LayoutMathRadixImport } from './../../routes/_layout/math/radix'
import { Route as LayoutMathCalculatorImport } from './../../routes/_layout/math/calculator'
import { Route as LayoutIniadSensorImport } from './../../routes/_layout/iniad/sensor'
import { Route as LayoutIniadLockerImport } from './../../routes/_layout/iniad/locker'
import { Route as LayoutImageSvg2pngImport } from './../../routes/_layout/image/svg2png'
import { Route as LayoutFormatterZigImport } from './../../routes/_layout/formatter/zig'
import { Route as LayoutFormatterYamlImport } from './../../routes/_layout/formatter/yaml'
import { Route as LayoutFormatterTypescriptImport } from './../../routes/_layout/formatter/typescript'
import { Route as LayoutFormatterSqlImport } from './../../routes/_layout/formatter/sql'
import { Route as LayoutFormatterPythonImport } from './../../routes/_layout/formatter/python'
import { Route as LayoutFormatterLuaImport } from './../../routes/_layout/formatter/lua'
import { Route as LayoutFormatterJsonImport } from './../../routes/_layout/formatter/json'
import { Route as LayoutFormatterJavaImport } from './../../routes/_layout/formatter/java'
import { Route as LayoutFormatterHtmlImport } from './../../routes/_layout/formatter/html'
import { Route as LayoutFormatterGoImport } from './../../routes/_layout/formatter/go'
import { Route as LayoutFormatterDartImport } from './../../routes/_layout/formatter/dart'
import { Route as LayoutFormatterCssImport } from './../../routes/_layout/formatter/css'
import { Route as LayoutFormatterCImport } from './../../routes/_layout/formatter/c'
import { Route as LayoutDevelopMarkdownImport } from './../../routes/_layout/develop/markdown'
import { Route as LayoutDevelopKeyEventImport } from './../../routes/_layout/develop/keyEvent'
import { Route as LayoutDevelopIframeImport } from './../../routes/_layout/develop/iframe'
import { Route as LayoutDevelopCursorImport } from './../../routes/_layout/develop/cursor'
import { Route as LayoutDevelopClipboardImport } from './../../routes/_layout/develop/clipboard'
import { Route as LayoutConvertUrlImport } from './../../routes/_layout/convert/url'
import { Route as LayoutConvertQrcodeImport } from './../../routes/_layout/convert/qrcode'
import { Route as LayoutConvertPunycodeImport } from './../../routes/_layout/convert/punycode'
import { Route as LayoutConvertJsonSchemaToZodImport } from './../../routes/_layout/convert/jsonSchemaToZod'
import { Route as LayoutConvertCjpImport } from './../../routes/_layout/convert/cjp'
import { Route as LayoutConvertBase64Import } from './../../routes/_layout/convert/base64'
import { Route as LayoutIniadTimetableIndexImport } from './../../routes/_layout/iniad/timetable/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextReplaceRoute = LayoutTextReplaceImport.update({
  id: '/text/replace',
  path: '/text/replace',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextRepeatRoute = LayoutTextRepeatImport.update({
  id: '/text/repeat',
  path: '/text/repeat',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextCountRoute = LayoutTextCountImport.update({
  id: '/text/count',
  path: '/text/count',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMathRadixRoute = LayoutMathRadixImport.update({
  id: '/math/radix',
  path: '/math/radix',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMathCalculatorRoute = LayoutMathCalculatorImport.update({
  id: '/math/calculator',
  path: '/math/calculator',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIniadSensorRoute = LayoutIniadSensorImport.update({
  id: '/iniad/sensor',
  path: '/iniad/sensor',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIniadLockerRoute = LayoutIniadLockerImport.update({
  id: '/iniad/locker',
  path: '/iniad/locker',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutImageSvg2pngRoute = LayoutImageSvg2pngImport.update({
  id: '/image/svg2png',
  path: '/image/svg2png',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterZigRoute = LayoutFormatterZigImport.update({
  id: '/formatter/zig',
  path: '/formatter/zig',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterYamlRoute = LayoutFormatterYamlImport.update({
  id: '/formatter/yaml',
  path: '/formatter/yaml',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterTypescriptRoute = LayoutFormatterTypescriptImport.update({
  id: '/formatter/typescript',
  path: '/formatter/typescript',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterSqlRoute = LayoutFormatterSqlImport.update({
  id: '/formatter/sql',
  path: '/formatter/sql',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterPythonRoute = LayoutFormatterPythonImport.update({
  id: '/formatter/python',
  path: '/formatter/python',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterLuaRoute = LayoutFormatterLuaImport.update({
  id: '/formatter/lua',
  path: '/formatter/lua',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterJsonRoute = LayoutFormatterJsonImport.update({
  id: '/formatter/json',
  path: '/formatter/json',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterJavaRoute = LayoutFormatterJavaImport.update({
  id: '/formatter/java',
  path: '/formatter/java',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterHtmlRoute = LayoutFormatterHtmlImport.update({
  id: '/formatter/html',
  path: '/formatter/html',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterGoRoute = LayoutFormatterGoImport.update({
  id: '/formatter/go',
  path: '/formatter/go',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterDartRoute = LayoutFormatterDartImport.update({
  id: '/formatter/dart',
  path: '/formatter/dart',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterCssRoute = LayoutFormatterCssImport.update({
  id: '/formatter/css',
  path: '/formatter/css',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFormatterCRoute = LayoutFormatterCImport.update({
  id: '/formatter/c',
  path: '/formatter/c',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDevelopMarkdownRoute = LayoutDevelopMarkdownImport.update({
  id: '/develop/markdown',
  path: '/develop/markdown',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDevelopKeyEventRoute = LayoutDevelopKeyEventImport.update({
  id: '/develop/keyEvent',
  path: '/develop/keyEvent',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDevelopIframeRoute = LayoutDevelopIframeImport.update({
  id: '/develop/iframe',
  path: '/develop/iframe',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDevelopCursorRoute = LayoutDevelopCursorImport.update({
  id: '/develop/cursor',
  path: '/develop/cursor',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDevelopClipboardRoute = LayoutDevelopClipboardImport.update({
  id: '/develop/clipboard',
  path: '/develop/clipboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutConvertUrlRoute = LayoutConvertUrlImport.update({
  id: '/convert/url',
  path: '/convert/url',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutConvertQrcodeRoute = LayoutConvertQrcodeImport.update({
  id: '/convert/qrcode',
  path: '/convert/qrcode',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutConvertPunycodeRoute = LayoutConvertPunycodeImport.update({
  id: '/convert/punycode',
  path: '/convert/punycode',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutConvertJsonSchemaToZodRoute =
  LayoutConvertJsonSchemaToZodImport.update({
    id: '/convert/jsonSchemaToZod',
    path: '/convert/jsonSchemaToZod',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutConvertCjpRoute = LayoutConvertCjpImport.update({
  id: '/convert/cjp',
  path: '/convert/cjp',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutConvertBase64Route = LayoutConvertBase64Import.update({
  id: '/convert/base64',
  path: '/convert/base64',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIniadTimetableIndexRoute = LayoutIniadTimetableIndexImport.update({
  id: '/iniad/timetable/',
  path: '/iniad/timetable/',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/base64': {
      id: '/_layout/convert/base64'
      path: '/convert/base64'
      fullPath: '/convert/base64'
      preLoaderRoute: typeof LayoutConvertBase64Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/cjp': {
      id: '/_layout/convert/cjp'
      path: '/convert/cjp'
      fullPath: '/convert/cjp'
      preLoaderRoute: typeof LayoutConvertCjpImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/jsonSchemaToZod': {
      id: '/_layout/convert/jsonSchemaToZod'
      path: '/convert/jsonSchemaToZod'
      fullPath: '/convert/jsonSchemaToZod'
      preLoaderRoute: typeof LayoutConvertJsonSchemaToZodImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/punycode': {
      id: '/_layout/convert/punycode'
      path: '/convert/punycode'
      fullPath: '/convert/punycode'
      preLoaderRoute: typeof LayoutConvertPunycodeImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/qrcode': {
      id: '/_layout/convert/qrcode'
      path: '/convert/qrcode'
      fullPath: '/convert/qrcode'
      preLoaderRoute: typeof LayoutConvertQrcodeImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/convert/url': {
      id: '/_layout/convert/url'
      path: '/convert/url'
      fullPath: '/convert/url'
      preLoaderRoute: typeof LayoutConvertUrlImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/develop/clipboard': {
      id: '/_layout/develop/clipboard'
      path: '/develop/clipboard'
      fullPath: '/develop/clipboard'
      preLoaderRoute: typeof LayoutDevelopClipboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/develop/cursor': {
      id: '/_layout/develop/cursor'
      path: '/develop/cursor'
      fullPath: '/develop/cursor'
      preLoaderRoute: typeof LayoutDevelopCursorImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/develop/iframe': {
      id: '/_layout/develop/iframe'
      path: '/develop/iframe'
      fullPath: '/develop/iframe'
      preLoaderRoute: typeof LayoutDevelopIframeImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/develop/keyEvent': {
      id: '/_layout/develop/keyEvent'
      path: '/develop/keyEvent'
      fullPath: '/develop/keyEvent'
      preLoaderRoute: typeof LayoutDevelopKeyEventImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/develop/markdown': {
      id: '/_layout/develop/markdown'
      path: '/develop/markdown'
      fullPath: '/develop/markdown'
      preLoaderRoute: typeof LayoutDevelopMarkdownImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/c': {
      id: '/_layout/formatter/c'
      path: '/formatter/c'
      fullPath: '/formatter/c'
      preLoaderRoute: typeof LayoutFormatterCImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/css': {
      id: '/_layout/formatter/css'
      path: '/formatter/css'
      fullPath: '/formatter/css'
      preLoaderRoute: typeof LayoutFormatterCssImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/dart': {
      id: '/_layout/formatter/dart'
      path: '/formatter/dart'
      fullPath: '/formatter/dart'
      preLoaderRoute: typeof LayoutFormatterDartImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/go': {
      id: '/_layout/formatter/go'
      path: '/formatter/go'
      fullPath: '/formatter/go'
      preLoaderRoute: typeof LayoutFormatterGoImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/html': {
      id: '/_layout/formatter/html'
      path: '/formatter/html'
      fullPath: '/formatter/html'
      preLoaderRoute: typeof LayoutFormatterHtmlImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/java': {
      id: '/_layout/formatter/java'
      path: '/formatter/java'
      fullPath: '/formatter/java'
      preLoaderRoute: typeof LayoutFormatterJavaImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/json': {
      id: '/_layout/formatter/json'
      path: '/formatter/json'
      fullPath: '/formatter/json'
      preLoaderRoute: typeof LayoutFormatterJsonImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/lua': {
      id: '/_layout/formatter/lua'
      path: '/formatter/lua'
      fullPath: '/formatter/lua'
      preLoaderRoute: typeof LayoutFormatterLuaImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/python': {
      id: '/_layout/formatter/python'
      path: '/formatter/python'
      fullPath: '/formatter/python'
      preLoaderRoute: typeof LayoutFormatterPythonImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/sql': {
      id: '/_layout/formatter/sql'
      path: '/formatter/sql'
      fullPath: '/formatter/sql'
      preLoaderRoute: typeof LayoutFormatterSqlImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/typescript': {
      id: '/_layout/formatter/typescript'
      path: '/formatter/typescript'
      fullPath: '/formatter/typescript'
      preLoaderRoute: typeof LayoutFormatterTypescriptImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/yaml': {
      id: '/_layout/formatter/yaml'
      path: '/formatter/yaml'
      fullPath: '/formatter/yaml'
      preLoaderRoute: typeof LayoutFormatterYamlImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/formatter/zig': {
      id: '/_layout/formatter/zig'
      path: '/formatter/zig'
      fullPath: '/formatter/zig'
      preLoaderRoute: typeof LayoutFormatterZigImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/image/svg2png': {
      id: '/_layout/image/svg2png'
      path: '/image/svg2png'
      fullPath: '/image/svg2png'
      preLoaderRoute: typeof LayoutImageSvg2pngImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/iniad/locker': {
      id: '/_layout/iniad/locker'
      path: '/iniad/locker'
      fullPath: '/iniad/locker'
      preLoaderRoute: typeof LayoutIniadLockerImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/iniad/sensor': {
      id: '/_layout/iniad/sensor'
      path: '/iniad/sensor'
      fullPath: '/iniad/sensor'
      preLoaderRoute: typeof LayoutIniadSensorImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/math/calculator': {
      id: '/_layout/math/calculator'
      path: '/math/calculator'
      fullPath: '/math/calculator'
      preLoaderRoute: typeof LayoutMathCalculatorImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/math/radix': {
      id: '/_layout/math/radix'
      path: '/math/radix'
      fullPath: '/math/radix'
      preLoaderRoute: typeof LayoutMathRadixImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/count': {
      id: '/_layout/text/count'
      path: '/text/count'
      fullPath: '/text/count'
      preLoaderRoute: typeof LayoutTextCountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/repeat': {
      id: '/_layout/text/repeat'
      path: '/text/repeat'
      fullPath: '/text/repeat'
      preLoaderRoute: typeof LayoutTextRepeatImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/replace': {
      id: '/_layout/text/replace'
      path: '/text/replace'
      fullPath: '/text/replace'
      preLoaderRoute: typeof LayoutTextReplaceImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/iniad/timetable/': {
      id: '/_layout/iniad/timetable/'
      path: '/iniad/timetable'
      fullPath: '/iniad/timetable'
      preLoaderRoute: typeof LayoutIniadTimetableIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutConvertBase64Route: typeof LayoutConvertBase64Route
  LayoutConvertCjpRoute: typeof LayoutConvertCjpRoute
  LayoutConvertJsonSchemaToZodRoute: typeof LayoutConvertJsonSchemaToZodRoute
  LayoutConvertPunycodeRoute: typeof LayoutConvertPunycodeRoute
  LayoutConvertQrcodeRoute: typeof LayoutConvertQrcodeRoute
  LayoutConvertUrlRoute: typeof LayoutConvertUrlRoute
  LayoutDevelopClipboardRoute: typeof LayoutDevelopClipboardRoute
  LayoutDevelopCursorRoute: typeof LayoutDevelopCursorRoute
  LayoutDevelopIframeRoute: typeof LayoutDevelopIframeRoute
  LayoutDevelopKeyEventRoute: typeof LayoutDevelopKeyEventRoute
  LayoutDevelopMarkdownRoute: typeof LayoutDevelopMarkdownRoute
  LayoutFormatterCRoute: typeof LayoutFormatterCRoute
  LayoutFormatterCssRoute: typeof LayoutFormatterCssRoute
  LayoutFormatterDartRoute: typeof LayoutFormatterDartRoute
  LayoutFormatterGoRoute: typeof LayoutFormatterGoRoute
  LayoutFormatterHtmlRoute: typeof LayoutFormatterHtmlRoute
  LayoutFormatterJavaRoute: typeof LayoutFormatterJavaRoute
  LayoutFormatterJsonRoute: typeof LayoutFormatterJsonRoute
  LayoutFormatterLuaRoute: typeof LayoutFormatterLuaRoute
  LayoutFormatterPythonRoute: typeof LayoutFormatterPythonRoute
  LayoutFormatterSqlRoute: typeof LayoutFormatterSqlRoute
  LayoutFormatterTypescriptRoute: typeof LayoutFormatterTypescriptRoute
  LayoutFormatterYamlRoute: typeof LayoutFormatterYamlRoute
  LayoutFormatterZigRoute: typeof LayoutFormatterZigRoute
  LayoutImageSvg2pngRoute: typeof LayoutImageSvg2pngRoute
  LayoutIniadLockerRoute: typeof LayoutIniadLockerRoute
  LayoutIniadSensorRoute: typeof LayoutIniadSensorRoute
  LayoutMathCalculatorRoute: typeof LayoutMathCalculatorRoute
  LayoutMathRadixRoute: typeof LayoutMathRadixRoute
  LayoutTextCountRoute: typeof LayoutTextCountRoute
  LayoutTextRepeatRoute: typeof LayoutTextRepeatRoute
  LayoutTextReplaceRoute: typeof LayoutTextReplaceRoute
  LayoutIniadTimetableIndexRoute: typeof LayoutIniadTimetableIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutConvertBase64Route: LayoutConvertBase64Route,
  LayoutConvertCjpRoute: LayoutConvertCjpRoute,
  LayoutConvertJsonSchemaToZodRoute: LayoutConvertJsonSchemaToZodRoute,
  LayoutConvertPunycodeRoute: LayoutConvertPunycodeRoute,
  LayoutConvertQrcodeRoute: LayoutConvertQrcodeRoute,
  LayoutConvertUrlRoute: LayoutConvertUrlRoute,
  LayoutDevelopClipboardRoute: LayoutDevelopClipboardRoute,
  LayoutDevelopCursorRoute: LayoutDevelopCursorRoute,
  LayoutDevelopIframeRoute: LayoutDevelopIframeRoute,
  LayoutDevelopKeyEventRoute: LayoutDevelopKeyEventRoute,
  LayoutDevelopMarkdownRoute: LayoutDevelopMarkdownRoute,
  LayoutFormatterCRoute: LayoutFormatterCRoute,
  LayoutFormatterCssRoute: LayoutFormatterCssRoute,
  LayoutFormatterDartRoute: LayoutFormatterDartRoute,
  LayoutFormatterGoRoute: LayoutFormatterGoRoute,
  LayoutFormatterHtmlRoute: LayoutFormatterHtmlRoute,
  LayoutFormatterJavaRoute: LayoutFormatterJavaRoute,
  LayoutFormatterJsonRoute: LayoutFormatterJsonRoute,
  LayoutFormatterLuaRoute: LayoutFormatterLuaRoute,
  LayoutFormatterPythonRoute: LayoutFormatterPythonRoute,
  LayoutFormatterSqlRoute: LayoutFormatterSqlRoute,
  LayoutFormatterTypescriptRoute: LayoutFormatterTypescriptRoute,
  LayoutFormatterYamlRoute: LayoutFormatterYamlRoute,
  LayoutFormatterZigRoute: LayoutFormatterZigRoute,
  LayoutImageSvg2pngRoute: LayoutImageSvg2pngRoute,
  LayoutIniadLockerRoute: LayoutIniadLockerRoute,
  LayoutIniadSensorRoute: LayoutIniadSensorRoute,
  LayoutMathCalculatorRoute: LayoutMathCalculatorRoute,
  LayoutMathRadixRoute: LayoutMathRadixRoute,
  LayoutTextCountRoute: LayoutTextCountRoute,
  LayoutTextRepeatRoute: LayoutTextRepeatRoute,
  LayoutTextReplaceRoute: LayoutTextReplaceRoute,
  LayoutIniadTimetableIndexRoute: LayoutIniadTimetableIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/convert/base64': typeof LayoutConvertBase64Route
  '/convert/cjp': typeof LayoutConvertCjpRoute
  '/convert/jsonSchemaToZod': typeof LayoutConvertJsonSchemaToZodRoute
  '/convert/punycode': typeof LayoutConvertPunycodeRoute
  '/convert/qrcode': typeof LayoutConvertQrcodeRoute
  '/convert/url': typeof LayoutConvertUrlRoute
  '/develop/clipboard': typeof LayoutDevelopClipboardRoute
  '/develop/cursor': typeof LayoutDevelopCursorRoute
  '/develop/iframe': typeof LayoutDevelopIframeRoute
  '/develop/keyEvent': typeof LayoutDevelopKeyEventRoute
  '/develop/markdown': typeof LayoutDevelopMarkdownRoute
  '/formatter/c': typeof LayoutFormatterCRoute
  '/formatter/css': typeof LayoutFormatterCssRoute
  '/formatter/dart': typeof LayoutFormatterDartRoute
  '/formatter/go': typeof LayoutFormatterGoRoute
  '/formatter/html': typeof LayoutFormatterHtmlRoute
  '/formatter/java': typeof LayoutFormatterJavaRoute
  '/formatter/json': typeof LayoutFormatterJsonRoute
  '/formatter/lua': typeof LayoutFormatterLuaRoute
  '/formatter/python': typeof LayoutFormatterPythonRoute
  '/formatter/sql': typeof LayoutFormatterSqlRoute
  '/formatter/typescript': typeof LayoutFormatterTypescriptRoute
  '/formatter/yaml': typeof LayoutFormatterYamlRoute
  '/formatter/zig': typeof LayoutFormatterZigRoute
  '/image/svg2png': typeof LayoutImageSvg2pngRoute
  '/iniad/locker': typeof LayoutIniadLockerRoute
  '/iniad/sensor': typeof LayoutIniadSensorRoute
  '/math/calculator': typeof LayoutMathCalculatorRoute
  '/math/radix': typeof LayoutMathRadixRoute
  '/text/count': typeof LayoutTextCountRoute
  '/text/repeat': typeof LayoutTextRepeatRoute
  '/text/replace': typeof LayoutTextReplaceRoute
  '/iniad/timetable': typeof LayoutIniadTimetableIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/convert/base64': typeof LayoutConvertBase64Route
  '/convert/cjp': typeof LayoutConvertCjpRoute
  '/convert/jsonSchemaToZod': typeof LayoutConvertJsonSchemaToZodRoute
  '/convert/punycode': typeof LayoutConvertPunycodeRoute
  '/convert/qrcode': typeof LayoutConvertQrcodeRoute
  '/convert/url': typeof LayoutConvertUrlRoute
  '/develop/clipboard': typeof LayoutDevelopClipboardRoute
  '/develop/cursor': typeof LayoutDevelopCursorRoute
  '/develop/iframe': typeof LayoutDevelopIframeRoute
  '/develop/keyEvent': typeof LayoutDevelopKeyEventRoute
  '/develop/markdown': typeof LayoutDevelopMarkdownRoute
  '/formatter/c': typeof LayoutFormatterCRoute
  '/formatter/css': typeof LayoutFormatterCssRoute
  '/formatter/dart': typeof LayoutFormatterDartRoute
  '/formatter/go': typeof LayoutFormatterGoRoute
  '/formatter/html': typeof LayoutFormatterHtmlRoute
  '/formatter/java': typeof LayoutFormatterJavaRoute
  '/formatter/json': typeof LayoutFormatterJsonRoute
  '/formatter/lua': typeof LayoutFormatterLuaRoute
  '/formatter/python': typeof LayoutFormatterPythonRoute
  '/formatter/sql': typeof LayoutFormatterSqlRoute
  '/formatter/typescript': typeof LayoutFormatterTypescriptRoute
  '/formatter/yaml': typeof LayoutFormatterYamlRoute
  '/formatter/zig': typeof LayoutFormatterZigRoute
  '/image/svg2png': typeof LayoutImageSvg2pngRoute
  '/iniad/locker': typeof LayoutIniadLockerRoute
  '/iniad/sensor': typeof LayoutIniadSensorRoute
  '/math/calculator': typeof LayoutMathCalculatorRoute
  '/math/radix': typeof LayoutMathRadixRoute
  '/text/count': typeof LayoutTextCountRoute
  '/text/repeat': typeof LayoutTextRepeatRoute
  '/text/replace': typeof LayoutTextReplaceRoute
  '/iniad/timetable': typeof LayoutIniadTimetableIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/convert/base64': typeof LayoutConvertBase64Route
  '/_layout/convert/cjp': typeof LayoutConvertCjpRoute
  '/_layout/convert/jsonSchemaToZod': typeof LayoutConvertJsonSchemaToZodRoute
  '/_layout/convert/punycode': typeof LayoutConvertPunycodeRoute
  '/_layout/convert/qrcode': typeof LayoutConvertQrcodeRoute
  '/_layout/convert/url': typeof LayoutConvertUrlRoute
  '/_layout/develop/clipboard': typeof LayoutDevelopClipboardRoute
  '/_layout/develop/cursor': typeof LayoutDevelopCursorRoute
  '/_layout/develop/iframe': typeof LayoutDevelopIframeRoute
  '/_layout/develop/keyEvent': typeof LayoutDevelopKeyEventRoute
  '/_layout/develop/markdown': typeof LayoutDevelopMarkdownRoute
  '/_layout/formatter/c': typeof LayoutFormatterCRoute
  '/_layout/formatter/css': typeof LayoutFormatterCssRoute
  '/_layout/formatter/dart': typeof LayoutFormatterDartRoute
  '/_layout/formatter/go': typeof LayoutFormatterGoRoute
  '/_layout/formatter/html': typeof LayoutFormatterHtmlRoute
  '/_layout/formatter/java': typeof LayoutFormatterJavaRoute
  '/_layout/formatter/json': typeof LayoutFormatterJsonRoute
  '/_layout/formatter/lua': typeof LayoutFormatterLuaRoute
  '/_layout/formatter/python': typeof LayoutFormatterPythonRoute
  '/_layout/formatter/sql': typeof LayoutFormatterSqlRoute
  '/_layout/formatter/typescript': typeof LayoutFormatterTypescriptRoute
  '/_layout/formatter/yaml': typeof LayoutFormatterYamlRoute
  '/_layout/formatter/zig': typeof LayoutFormatterZigRoute
  '/_layout/image/svg2png': typeof LayoutImageSvg2pngRoute
  '/_layout/iniad/locker': typeof LayoutIniadLockerRoute
  '/_layout/iniad/sensor': typeof LayoutIniadSensorRoute
  '/_layout/math/calculator': typeof LayoutMathCalculatorRoute
  '/_layout/math/radix': typeof LayoutMathRadixRoute
  '/_layout/text/count': typeof LayoutTextCountRoute
  '/_layout/text/repeat': typeof LayoutTextRepeatRoute
  '/_layout/text/replace': typeof LayoutTextReplaceRoute
  '/_layout/iniad/timetable/': typeof LayoutIniadTimetableIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/convert/base64'
    | '/convert/cjp'
    | '/convert/jsonSchemaToZod'
    | '/convert/punycode'
    | '/convert/qrcode'
    | '/convert/url'
    | '/develop/clipboard'
    | '/develop/cursor'
    | '/develop/iframe'
    | '/develop/keyEvent'
    | '/develop/markdown'
    | '/formatter/c'
    | '/formatter/css'
    | '/formatter/dart'
    | '/formatter/go'
    | '/formatter/html'
    | '/formatter/java'
    | '/formatter/json'
    | '/formatter/lua'
    | '/formatter/python'
    | '/formatter/sql'
    | '/formatter/typescript'
    | '/formatter/yaml'
    | '/formatter/zig'
    | '/image/svg2png'
    | '/iniad/locker'
    | '/iniad/sensor'
    | '/math/calculator'
    | '/math/radix'
    | '/text/count'
    | '/text/repeat'
    | '/text/replace'
    | '/iniad/timetable'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/convert/base64'
    | '/convert/cjp'
    | '/convert/jsonSchemaToZod'
    | '/convert/punycode'
    | '/convert/qrcode'
    | '/convert/url'
    | '/develop/clipboard'
    | '/develop/cursor'
    | '/develop/iframe'
    | '/develop/keyEvent'
    | '/develop/markdown'
    | '/formatter/c'
    | '/formatter/css'
    | '/formatter/dart'
    | '/formatter/go'
    | '/formatter/html'
    | '/formatter/java'
    | '/formatter/json'
    | '/formatter/lua'
    | '/formatter/python'
    | '/formatter/sql'
    | '/formatter/typescript'
    | '/formatter/yaml'
    | '/formatter/zig'
    | '/image/svg2png'
    | '/iniad/locker'
    | '/iniad/sensor'
    | '/math/calculator'
    | '/math/radix'
    | '/text/count'
    | '/text/repeat'
    | '/text/replace'
    | '/iniad/timetable'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/convert/base64'
    | '/_layout/convert/cjp'
    | '/_layout/convert/jsonSchemaToZod'
    | '/_layout/convert/punycode'
    | '/_layout/convert/qrcode'
    | '/_layout/convert/url'
    | '/_layout/develop/clipboard'
    | '/_layout/develop/cursor'
    | '/_layout/develop/iframe'
    | '/_layout/develop/keyEvent'
    | '/_layout/develop/markdown'
    | '/_layout/formatter/c'
    | '/_layout/formatter/css'
    | '/_layout/formatter/dart'
    | '/_layout/formatter/go'
    | '/_layout/formatter/html'
    | '/_layout/formatter/java'
    | '/_layout/formatter/json'
    | '/_layout/formatter/lua'
    | '/_layout/formatter/python'
    | '/_layout/formatter/sql'
    | '/_layout/formatter/typescript'
    | '/_layout/formatter/yaml'
    | '/_layout/formatter/zig'
    | '/_layout/image/svg2png'
    | '/_layout/iniad/locker'
    | '/_layout/iniad/sensor'
    | '/_layout/math/calculator'
    | '/_layout/math/radix'
    | '/_layout/text/count'
    | '/_layout/text/repeat'
    | '/_layout/text/replace'
    | '/_layout/iniad/timetable/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/convert/base64",
        "/_layout/convert/cjp",
        "/_layout/convert/jsonSchemaToZod",
        "/_layout/convert/punycode",
        "/_layout/convert/qrcode",
        "/_layout/convert/url",
        "/_layout/develop/clipboard",
        "/_layout/develop/cursor",
        "/_layout/develop/iframe",
        "/_layout/develop/keyEvent",
        "/_layout/develop/markdown",
        "/_layout/formatter/c",
        "/_layout/formatter/css",
        "/_layout/formatter/dart",
        "/_layout/formatter/go",
        "/_layout/formatter/html",
        "/_layout/formatter/java",
        "/_layout/formatter/json",
        "/_layout/formatter/lua",
        "/_layout/formatter/python",
        "/_layout/formatter/sql",
        "/_layout/formatter/typescript",
        "/_layout/formatter/yaml",
        "/_layout/formatter/zig",
        "/_layout/image/svg2png",
        "/_layout/iniad/locker",
        "/_layout/iniad/sensor",
        "/_layout/math/calculator",
        "/_layout/math/radix",
        "/_layout/text/count",
        "/_layout/text/repeat",
        "/_layout/text/replace",
        "/_layout/iniad/timetable/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/base64": {
      "filePath": "_layout/convert/base64.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/cjp": {
      "filePath": "_layout/convert/cjp.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/jsonSchemaToZod": {
      "filePath": "_layout/convert/jsonSchemaToZod.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/punycode": {
      "filePath": "_layout/convert/punycode.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/qrcode": {
      "filePath": "_layout/convert/qrcode.tsx",
      "parent": "/_layout"
    },
    "/_layout/convert/url": {
      "filePath": "_layout/convert/url.tsx",
      "parent": "/_layout"
    },
    "/_layout/develop/clipboard": {
      "filePath": "_layout/develop/clipboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/develop/cursor": {
      "filePath": "_layout/develop/cursor.tsx",
      "parent": "/_layout"
    },
    "/_layout/develop/iframe": {
      "filePath": "_layout/develop/iframe.tsx",
      "parent": "/_layout"
    },
    "/_layout/develop/keyEvent": {
      "filePath": "_layout/develop/keyEvent.tsx",
      "parent": "/_layout"
    },
    "/_layout/develop/markdown": {
      "filePath": "_layout/develop/markdown.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/c": {
      "filePath": "_layout/formatter/c.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/css": {
      "filePath": "_layout/formatter/css.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/dart": {
      "filePath": "_layout/formatter/dart.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/go": {
      "filePath": "_layout/formatter/go.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/html": {
      "filePath": "_layout/formatter/html.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/java": {
      "filePath": "_layout/formatter/java.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/json": {
      "filePath": "_layout/formatter/json.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/lua": {
      "filePath": "_layout/formatter/lua.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/python": {
      "filePath": "_layout/formatter/python.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/sql": {
      "filePath": "_layout/formatter/sql.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/typescript": {
      "filePath": "_layout/formatter/typescript.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/yaml": {
      "filePath": "_layout/formatter/yaml.tsx",
      "parent": "/_layout"
    },
    "/_layout/formatter/zig": {
      "filePath": "_layout/formatter/zig.tsx",
      "parent": "/_layout"
    },
    "/_layout/image/svg2png": {
      "filePath": "_layout/image/svg2png.tsx",
      "parent": "/_layout"
    },
    "/_layout/iniad/locker": {
      "filePath": "_layout/iniad/locker.tsx",
      "parent": "/_layout"
    },
    "/_layout/iniad/sensor": {
      "filePath": "_layout/iniad/sensor.tsx",
      "parent": "/_layout"
    },
    "/_layout/math/calculator": {
      "filePath": "_layout/math/calculator.tsx",
      "parent": "/_layout"
    },
    "/_layout/math/radix": {
      "filePath": "_layout/math/radix.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/count": {
      "filePath": "_layout/text/count.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/repeat": {
      "filePath": "_layout/text/repeat.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/replace": {
      "filePath": "_layout/text/replace.tsx",
      "parent": "/_layout"
    },
    "/_layout/iniad/timetable/": {
      "filePath": "_layout/iniad/timetable/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */

// biome-ignore lint: this file is auto-generated by TanStack Router

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as LayoutImport } from './../../routes/_layout'
import { Route as LayoutIndexImport } from './../../routes/_layout/index'
import { Route as LayoutTextCountImport } from './../../routes/_layout/text/count'
import { Route as LayoutTextRepeatImport } from './../../routes/_layout/text/repeat'
import { Route as LayoutTextReplaceImport } from './../../routes/_layout/text/replace'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextReplaceRoute = LayoutTextReplaceImport.update({
  path: '/text/replace',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextRepeatRoute = LayoutTextRepeatImport.update({
  path: '/text/repeat',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTextCountRoute = LayoutTextCountImport.update({
  path: '/text/count',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/count': {
      id: '/_layout/text/count'
      path: '/text/count'
      fullPath: '/text/count'
      preLoaderRoute: typeof LayoutTextCountImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/repeat': {
      id: '/_layout/text/repeat'
      path: '/text/repeat'
      fullPath: '/text/repeat'
      preLoaderRoute: typeof LayoutTextRepeatImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/text/replace': {
      id: '/_layout/text/replace'
      path: '/text/replace'
      fullPath: '/text/replace'
      preLoaderRoute: typeof LayoutTextReplaceImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutIndexRoute,
    LayoutTextCountRoute,
    LayoutTextRepeatRoute,
    LayoutTextReplaceRoute,
  }),
})

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/text/count",
        "/_layout/text/repeat",
        "/_layout/text/replace"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/count": {
      "filePath": "_layout/text/count.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/repeat": {
      "filePath": "_layout/text/repeat.tsx",
      "parent": "/_layout"
    },
    "/_layout/text/replace": {
      "filePath": "_layout/text/replace.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
